@using global::Radzen.Blazor
@inherits RadzenFieldComponentBase<PasswordField, RadzenPasswordFieldDesign>

@if (IsViewMode != true) {
  <div style="margin-bottom:10px">
    <RadzenPassword @bind-Value:get="@Value" @bind-Value:set="@RaiseOnValueChanged" Disabled="@IsDisabled"
                    AutoCompleteType="AutoCompleteType.NewPassword" Placeholder="Password" class="d-block w-100" />
  </div>
  <div>
    <RadzenPassword @bind-Value="@ConfirmPassword" Disabled="@IsDisabled"
                    AutoCompleteType="AutoCompleteType.NewPassword" Placeholder="Password (confirmation)" class="d-block w-100" />
  </div>
}

@code {
  private bool IsDisabled => Field.IsEnabled == false;
  private bool IsViewMode => Field.IsViewOnly;
  private string? Value => Field.Value;

  string ConfirmPassword {
    get => Field.ConfirmPassword;
    set => Field.ConfirmPassword = value;
  }

  private async Task RaiseOnValueChanged(string? value) {
    await Field.SetValueAsync(value);
  }

}