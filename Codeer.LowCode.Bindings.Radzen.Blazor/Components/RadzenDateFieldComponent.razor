@inherits RadzenFieldComponentBase<DateField, RadzenDateFieldDesign>

@if (IsViewMode) {
  <span class="d-block py-2">@GetViewOnlyValue()</span>
} else {
  <RadzenDatePicker TValue="DateOnly?" @bind-Value:get="Field.Value" @bind-Value:set="@RaiseOnValueChanged" 
                    Disabled="@IsDisabled" ReadOnly="IsViewMode" DateFormat="yyyy/MM/dd" class="d-block" />
}

@code {
  private bool IsDisabled => Field.IsEnabled == false;
  private bool IsViewMode => Field.IsViewOnly;
  
  private async Task RaiseOnValueChanged(DateOnly? value) {
    await Field.SetValueAsync(value);
  }

  private string GetViewOnlyValue() {
    var value = Field.Services.AppInfoService.IsDesignMode ? new DateOnly(2024, 5, 13) : Field.Value;
    try {
      return value?.ToString(Field.Design.Format) ?? string.Empty;
    }
    catch (FormatException) {
      return value?.ToString() ?? string.Empty;
    }
  }

}