@using Codeer.LowCode.Bindings.Radzen.Blazor.Internal
@inherits RadzenFieldComponentBase<TimeField, RadzenTimeFieldDesign>

@if (IsViewMode) {
  <span class="d-block py-2">@GetViewOnlyValue()</span>
} else {
  <RadzenDatePicker TValue="TimeOnly?" @bind-Value:get="@GetValue()" @bind-Value:set="@RaiseOnValueChanged"
                    Disabled="@IsDisabled" ReadOnly="IsViewMode" ShowTime="true" TimeOnly="true" DateFormat="HH:mm" class="d-block" />
}

@code {

  private bool IsDisabled => Field.IsEnabled == false;
  private bool IsViewMode => Field.IsViewOnly;

  private TimeOnly? GetValue() => Field.Design.SaveAsUtc ? DateTimeHelper.ToLocalTime(Field.Value) : Field.Value;

  private async Task RaiseOnValueChanged(TimeOnly? value) {
    await Field.SetValueAsync(Field.Design.SaveAsUtc ? DateTimeHelper.ToUniversalTime(value) : value);
  }

  private string GetViewOnlyValue() => GetValue().ToString() ?? "";

}